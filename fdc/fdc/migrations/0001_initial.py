# Generated by Django 4.2 on 2023-05-01 11:05

from django.db import migrations, models
import django.db.models.deletion
import fdc.models
import psqlextra.backend.migrations.operations.add_default_partition
import psqlextra.backend.migrations.operations.create_partitioned_model
import psqlextra.manager.manager
import psqlextra.models.partitioned
import psqlextra.types


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='InterlockLog',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('factory_id', models.CharField(default='KOR', max_length=10)),
                ('equipment_name', models.CharField(max_length=50, null=True)),
                ('cause_equip_id', models.CharField(max_length=50, null=True)),
                ('cause_equip_name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(default=fdc.models.random_past_datetime)),
                ('interlock_type', models.CharField(max_length=15)),
                ('out_count', models.IntegerField()),
                ('lower_limit', models.FloatField(null=True)),
                ('upper_limit', models.FloatField(null=True)),
                ('data_value', models.IntegerField(null=True)),
                ('cctv_video_url', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'interlock_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParamLog',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('factory_id', models.CharField(default='KOR', max_length=10)),
                ('created_at', models.DateTimeField(default=fdc.models.random_past_datetime)),
                ('param_value', models.FloatField(null=True)),
            ],
            options={
                'db_table': 'param_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('equipment_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('equipment_name', models.CharField(max_length=50)),
                ('equipment_use', models.CharField(max_length=10)),
                ('equipment_state', models.CharField(max_length=10, null=True)),
                ('equipment_mode', models.CharField(max_length=10, null=True)),
                ('creator_name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(default=fdc.models.random_past_datetime)),
                ('modifier_name', models.CharField(max_length=50, null=True)),
                ('updated_at', models.DateTimeField(default=fdc.models.random_future_datetime_from_past, null=True)),
                ('interlock_id', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'equipment',
            },
        ),
        migrations.CreateModel(
            name='EquipmentState',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('factory_id', models.CharField(default='KOR', max_length=10)),
                ('created_at', models.DateTimeField(default=fdc.models.random_past_datetime)),
                ('mode', models.CharField(max_length=10, null=True)),
                ('status', models.CharField(max_length=10, null=True)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fdc.equipment')),
            ],
            options={
                'db_table': 'equipment_state',
            },
        ),
        psqlextra.backend.migrations.operations.create_partitioned_model.PostgresCreatePartitionedModel(
            name='LotLog',
            fields=[
                ('lot_id', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('factory_id', models.CharField(default='KOR', max_length=10)),
                ('start_time', models.DateTimeField(default=fdc.models.random_past_datetime)),
                ('end_time', models.DateTimeField(default=fdc.models.random_future_datetime_from_past)),
                ('lot_state', models.CharField(max_length=10, null=True)),
                ('created_at', models.DateTimeField(default=fdc.models.random_past_datetime)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fdc.equipment')),
            ],
            options={
                'db_table': 'lot_log',
                'managed': True,
            },
            partitioning_options={
                'method': psqlextra.types.PostgresPartitioningMethod['RANGE'],
                'key': ['created_at'],
            },
            bases=(psqlextra.models.partitioned.PostgresPartitionedModel,),
            managers=[
                ('objects', psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        psqlextra.backend.migrations.operations.add_default_partition.PostgresAddDefaultPartition(
            model_name='LotLog',
            name='default',
        ),
        migrations.CreateModel(
            name='Param',
            fields=[
                ('param_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('param_name', models.CharField(max_length=50)),
                ('param_level', models.CharField(max_length=2)),
                ('param_state', models.CharField(max_length=10)),
                ('creator_name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(default=fdc.models.random_past_datetime)),
                ('modifier_name', models.CharField(max_length=50, null=True)),
                ('updated_at', models.DateTimeField(default=fdc.models.random_future_datetime_from_past, null=True)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='fdc.equipment')),
            ],
            options={
                'db_table': 'param',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('recipe_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('recipe_name', models.CharField(max_length=50)),
                ('lsl', models.FloatField(null=True)),
                ('usl', models.FloatField(null=True)),
                ('lsl_interlock_action', models.CharField(max_length=50, null=True)),
                ('usl_interlock_action', models.CharField(max_length=50, null=True)),
                ('recipe_use', models.CharField(max_length=10)),
                ('creator_name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(default=fdc.models.random_past_datetime)),
                ('modifier_name', models.CharField(max_length=50, null=True)),
                ('updated_at', models.DateTimeField(default=fdc.models.random_future_datetime_from_past, null=True)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fdc.equipment')),
                ('param', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fdc.param')),
            ],
            options={
                'db_table': 'recipe',
            },
        ),
        migrations.CreateModel(
            name='RecipeHistory',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('action', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(default=fdc.models.random_past_datetime)),
                ('old_value', models.JSONField(null=True)),
                ('new_value', models.JSONField(null=True)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fdc.recipe')),
            ],
            options={
                'db_table': 'recipe_history',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ParamHistory',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('action', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(default=fdc.models.random_past_datetime)),
                ('param_name', models.CharField(max_length=50)),
                ('old_value', models.JSONField(null=True)),
                ('new_value', models.JSONField(null=True)),
                ('param', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fdc.param')),
            ],
            options={
                'db_table': 'param_history',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='lotlog',
            name='recipe_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fdc.recipe'),
        ),
    ]
